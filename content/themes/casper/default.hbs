<!DOCTYPE html>
<html lang="{{@site.lang}}">

<head>

    {{!-- Document Settings --}}
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    {{!-- Base Meta --}}
    <title>{{meta_title}}</title>
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- App Insights -->
    {{!-- <script type="text/javascript">
        !function (T, l, y) { var S = T.location, u = "script", k = "instrumentationKey", D = "ingestionendpoint", C = "disableExceptionTracking", E = "ai.device.", I = "toLowerCase", b = "crossOrigin", w = "POST", e = "appInsightsSDK", t = y.name || "appInsights"; (y.name || T[e]) && (T[e] = t); var n = T[t] || function (d) { var g = !1, f = !1, m = { initialize: !0, queue: [], sv: "4", version: 2, config: d }; function v(e, t) { var n = {}, a = "Browser"; return n[E + "id"] = a[I](), n[E + "type"] = a, n["ai.operation.name"] = S && S.pathname || "_unknown_", n["ai.internal.sdkVersion"] = "javascript:snippet_" + (m.sv || m.version), { time: function () { var e = new Date; function t(e) { var t = "" + e; return 1 === t.length && (t = "0" + t), t } return e.getUTCFullYear() + "-" + t(1 + e.getUTCMonth()) + "-" + t(e.getUTCDate()) + "T" + t(e.getUTCHours()) + ":" + t(e.getUTCMinutes()) + ":" + t(e.getUTCSeconds()) + "." + ((e.getUTCMilliseconds() / 1e3).toFixed(3) + "").slice(2, 5) + "Z" }(), iKey: e, name: "Microsoft.ApplicationInsights." + e.replace(/-/g, "") + "." + t, sampleRate: 100, tags: n, data: { baseData: { ver: 2 } } } } var h = d.url || y.src; if (h) { function a(e) { var t, n, a, i, r, o, s, c, p, l, u; g = !0, m.queue = [], f || (f = !0, t = h, s = function () { var e = {}, t = d.connectionString; if (t) for (var n = t.split(";"), a = 0; a < n.length; a++) { var i = n[a].split("="); 2 === i.length && (e[i[0][I]()] = i[1]) } if (!e[D]) { var r = e.endpointsuffix, o = r ? e.location : null; e[D] = "https://" + (o ? o + "." : "") + "dc." + (r || "services.visualstudio.com") } return e }(), c = s[k] || d[k] || "", p = s[D], l = p ? p + "/v2/track" : config.endpointUrl, (u = []).push((n = "SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details)", a = t, i = l, (o = (r = v(c, "Exception")).data).baseType = "ExceptionData", o.baseData.exceptions = [{ typeName: "SDKLoadFailed", message: n.replace(/\./g, "-"), hasFullStack: !1, stack: n + "\nSnippet failed to load [" + a + "] -- Telemetry is disabled\nHelp Link: https://go.microsoft.com/fwlink/?linkid=2128109\nHost: " + (S && S.pathname || "_unknown_") + "\nEndpoint: " + i, parsedStack: [] }], r)), u.push(function (e, t, n, a) { var i = v(c, "Message"), r = i.data; r.baseType = "MessageData"; var o = r.baseData; return o.message = 'AI (Internal): 99 message:"' + ("SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details) (" + n + ")").replace(/\"/g, "") + '"', o.properties = { endpoint: a }, i }(0, 0, t, l)), function (e, t) { if (JSON) { var n = T.fetch; if (n && !y.useXhr) n(t, { method: w, body: JSON.stringify(e), mode: "cors" }); else if (XMLHttpRequest) { var a = new XMLHttpRequest; a.open(w, t), a.setRequestHeader("Content-type", "application/json"), a.send(JSON.stringify(e)) } } }(u, l)) } function i(e, t) { f || setTimeout(function () { !t && m.core || a() }, 500) } var e = function () { var n = l.createElement(u); n.src = h; var e = y[b]; return !e && "" !== e || "undefined" == n[b] || (n[b] = e), n.onload = i, n.onerror = a, n.onreadystatechange = function (e, t) { "loaded" !== n.readyState && "complete" !== n.readyState || i(0, t) }, n }(); y.ld < 0 ? l.getElementsByTagName("head")[0].appendChild(e) : setTimeout(function () { l.getElementsByTagName(u)[0].parentNode.appendChild(e) }, y.ld || 0) } try { m.cookie = l.cookie } catch (p) { } function t(e) { for (; e.length;)!function (t) { m[t] = function () { var e = arguments; g || m.queue.push(function () { m[t].apply(m, e) }) } }(e.pop()) } var n = "track", r = "TrackPage", o = "TrackEvent"; t([n + "Event", n + "PageView", n + "Exception", n + "Trace", n + "DependencyData", n + "Metric", n + "PageViewPerformance", "start" + r, "stop" + r, "start" + o, "stop" + o, "addTelemetryInitializer", "setAuthenticatedUserContext", "clearAuthenticatedUserContext", "flush"]), m.SeverityLevel = { Verbose: 0, Information: 1, Warning: 2, Error: 3, Critical: 4 }; var s = (d.extensionConfig || {}).ApplicationInsightsAnalytics || {}; if (!0 !== d[C] && !0 !== s[C]) { method = "onerror", t(["_" + method]); var c = T[method]; T[method] = function (e, t, n, a, i) { var r = c && c(e, t, n, a, i); return !0 !== r && m["_" + method]({ message: e, url: t, lineNumber: n, columnNumber: a, error: i }), r }, d.autoExceptionInstrumented = !0 } return m }(y.cfg); (T[t] = n).queue && 0 === n.queue.length && n.trackPageView({}) }(window, document, {
            src: "https://az416426.vo.msecnd.net/scripts/b/ai.2.min.js", // The SDK URL Source
            //name: "appInsights", // Global SDK Instance name defaults to "appInsights" when not supplied
            //ld: 0, // Defines the load delay (in ms) before attempting to load the sdk. -1 = block page load and add to head. (default) = 0ms load after timeout,
            //useXhr: 1, // Use XHR instead of fetch to report failures (if available),
            //crossOrigin: "anonymous", // When supplied this will add the provided value as the cross origin attribute on the script tag 
            cfg: { // Application Insights Configuration
                instrumentationKey: "0b720de0-dd90-4ddb-bc87-2488414552be"
                /* ...Other Configuration Options... */
            }
        });
    </script> --}}

    <!-- Global site tag (gtag.js) - Google Analytics -->
    {{!-- <script async src="https://www.googletagmanager.com/gtag/js?id=G-CQB970WYH4"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-CQB970WYH4');
    </script> --}}



    {{!-- Styles'n'Scripts --}}
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
        integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="{{asset " built/screen.css"}}" />
    <link rel="stylesheet" type="text/css" href="{{asset " built/prism.css"}}" />
    <style>
        pre[class*=language-] {
            font-size: 1.4rem;
        }

        div.code-toolbar .toolbar {
            opacity: 100;
        }
    </style>

    {{!-- AdBlock Detector --}}
    {{!-- <script>
        (function () {
            function getCookie(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return "";
            }

            function AdBlockEnabled() {
                var ad = document.createElement('ins');
                ad.id = 'AdBanner';
                ad.className = 'ad adsense google ad-slot';
                ad.style.display = 'block';
                ad.style.position = 'absolute';
                ad.style.top = '-1px';
                ad.style.height = '1px';
                ad.style.width = '1px';
                document.body.appendChild(ad);

                var isAdBlockEnabled = !ad.clientHeight;
                return isAdBlockEnabled;
            }

            function adBlockCallback(clientId) {
                var params = [];
                //params.push({key: 'dh', value: window.location.href});
                //params.push({key: 'dp', value: window.location.pathname});
                //params.push({key: 'cid', value: getCookie('adb_uuid') || new Date().getTime()});
                params.push({ key: 'tid', value: 'G-CQB970WYH4' });
                //params.push({key: 'ul', value: navigator.language});
                //params.push({key: 'clientId', value: clientId});

                var query_params = params.reduce(function (acc, item) {
                    var chunk = item.key + '=' + encodeURIComponent(item.value);

                    return acc ? acc + '&' + chunk : chunk;
                }, null);

                var http = new XMLHttpRequest();
                const url = 'https://adblock-reporter.azurewebsites.net/api/ReportAdBlock?' + 'clientId=' + clientId; //+ query_params;
                http.open('GET', url);
                http.send();
            }

            function dec2hex(dec) {
                return dec.toString(16).padStart(2, "0")
            }

            // generateId :: Integer -> String
            function generateId(len) {
                var arr = new Uint8Array((len || 40) / 2)
                window.crypto.getRandomValues(arr)
                return Array.from(arr, dec2hex).join('')
            }

            function setClientId(cname, exdays) {
                var d = new Date();
                var cvalue = generateId(20);
                d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
                var expires = "expires=" + d.toUTCString();
                document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
            }

            function getClientId(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return "";
            }

            window.onload = function () {
                const cName = "clientId"
                const cValidDays = 365
                if (AdBlockEnabled()) {
                    //   gtag('get', 'G-CQB970WYH4', 'client_id', resolve)

                    clientId = getClientId(cName);

                    if (clientId == "") {
                        clientId = setClientId(cName, cValidDays)
                    }
                    console.log(clientId);
                    adBlockCallback(clientId);
                }
            }
        })();
    </script> --}}

    {{!-- <script>
        var ghosthunter_key = '11229d2b4a3bd6bebb232d0459';
        //optional: set your custom ghost_root url, default is `"/ghost/api/v2"`
        var ghost_root_url = "/ghost/api/v3"
    </script> --}}

    <!-- Hotjar Tracking Code for www.kubernet.dev -->
    {{!-- <script>
            (function (h, o, t, j, a, r) {
                h.hj = h.hj || function () { (h.hj.q = h.hj.q || []).push(arguments) };
                h._hjSettings = { hjid: 2186339, hjsv: 6 };
                a = o.getElementsByTagName('head')[0];
                r = o.createElement('script'); r.async = 1;
                r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
                a.appendChild(r);
            })(window, document, 'https://static.hotjar.com/c/hotjar-', '.js?sv=');
    </script> --}}

    {{!-- This tag outputs SEO meta+structured data and other important settings --}}
    {{ghost_head}}

</head>

<body class="{{body_class}}">

    <div class="site-wrapper">

        {{!-- All the main content gets inserted here, index.hbs, post.hbs, etc --}}
        {{{body}}}

        {{!-- The footer at the very bottom of the screen --}}
        <footer class="site-footer outer">
            <div class="site-footer-content inner">
                <section class="copyright"><a href="{{@site.url}}">{{@site.title}}</a> &copy; {{date format="YYYY"}}
                </section>
                <nav class="site-footer-nav">
                    <a href="{{@site.url}}">Latest Posts</a>
                    {{#if @site.facebook}}<a href="{{facebook_url @site.facebook}}" target="_blank"
                        rel="noopener">Facebook</a>{{/if}}
                    {{#if @site.twitter}}<a href="{{twitter_url @site.twitter}}" target="_blank"
                        rel="noopener">Twitter</a>{{/if}}
                    <a href="https://www.linkedin.com/in/justin-vanwinkle/" target="_blank" rel="noopener">LinkedIn</a>
                </nav>
            </div>
        </footer>

    </div>

    {{> "search-overlay"}}

    {{!-- The big email subscribe modal content --}}
    {{#if @labs.members}}
    <div class="subscribe-notification subscribe-success-message">
        <a class="subscribe-close-button" href="javascript:;"></a>
        You've successfully subscribed to {{@site.title}}!
    </div>
    <div class="subscribe-notification subscribe-failure-message">
        <a class="subscribe-close-button" href="javascript:;"></a>
        Could not sign up! Invalid sign up link.
    </div>

    <div id="subscribe" class="subscribe-overlay">
        <a class="subscribe-close-overlay" href="#"></a>
        <a class="subscribe-close-button" href="#"></a>
        <div class="subscribe-overlay-content">
            {{#if @site.logo}}
            <img class="subscribe-overlay-logo" src="{{@site.logo}}" alt="{{@site.title}}" />
            {{/if}}
            <div class="subscribe-form">
                <h1 class="subscribe-overlay-title">Subscribe to {{@site.title}}</h1>
                <p class="subscribe-overlay-description">Stay up to date! Get all the latest & greatest posts delivered
                    straight to your inbox</p>
                <form data-members-form="subscribe">
                    <div class="form-group">
                        <input class="subscribe-email" data-members-email placeholder="youremail@example.com"
                            autocomplete="false" />
                        <button class="button primary" type="submit">
                            <span class="button-content">Subscribe</span>
                            <span class="button-loader">{{> "icons/loader"}}</span>
                        </button>
                    </div>
                    <div class="message-success">
                        <strong>Great!</strong> Check your inbox and click the link to confirm your subscription.
                    </div>
                    <div class="message-error">
                        Please enter a valid email address!
                    </div>
                </form>
            </div>
        </div>
    </div>
    {{/if}}

    {{!-- jQuery, required for fitvids --}}
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous">
        </script>

    {{!-- Fitvids (for responsive video embeds), infinite scroll, floating header, and gallery card support --}}
    <script src="{{asset " built/casper.js"}}"></script>

    {{!-- Scripts for Members subscription --}}
    <script>
        // Parse the URL parameter
        function getParameterByName(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        // Give the parameter a variable name
        var action = getParameterByName('action');
        var success = getParameterByName('success');

        $(document).ready(function () {
            if (action == 'subscribe' && (success === null || success === 'true')) {
                $('body').addClass('subscribe-success');
            }

            if (action == 'subscribe' && success === 'false') {
                $('body').addClass('subscribe-failure');
            }

            $('.subscribe-notification .subscribe-close-button').click(function () {
                $('.subscribe-notification').addClass('close');
            });

            // Reset form on opening subscrion overlay
            $('.subscribe-button').click(function () {
                $('.subscribe-overlay form').removeClass();
                $('.subscribe-email').val('');
            });
        });
    </script>

    {{!-- The #block helper will pull in data from the #contentFor other template files. In this case, there's some
    JavaScript which we only want to use in post.hbs, but it needs to be included down here, after jQuery has already
    loaded. --}}
    {{{block "scripts"}}}

    {{!-- Ghost outputs important scripts and data with this tag - it should always be the very last thing before the
    closing body tag --}}
    {{ghost_foot}}

    {{!-- Prism.js --}}
    <script>
        $(document).ready(function () {
            document.querySelectorAll('pre[class*=language-]').forEach(function (node) {
                node.classList.add('line-numbers');
            });
            Prism.highlightAll();
        });
    </script>

</body>

</html>