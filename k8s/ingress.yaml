apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: personal-ghost-ingress
  namespace: ghost
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/proxy-body-size: 8m # use this when you need to upload a backup
spec:
  tls:
    - hosts:
        - personal-ghost-ingress.www.kubernet.dev
      secretName: kubernet-crt-secret
  rules:
  - host: www.kubernet.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: personal-ghost-service
            port: 
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: personal-ghost-ingress-wwwredir
  namespace: ghost
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/configuration-snippet: "return 302 $scheme://www.kubernet.dev$request_uri;"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - hosts:
        - personal-ghost-ingress-wwwredir.kubernet.dev
      secretName: kubernet-crt-secret
  rules:
  - host: kubernet.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: personal-ghost-service
            port: 
              number: 80